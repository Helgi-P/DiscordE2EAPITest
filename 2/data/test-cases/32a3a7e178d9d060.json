{"uid":"32a3a7e178d9d060","name":"test_send_message_and_delete_it_1[1281160246110457922]","fullName":"test_DiscordAPI#test_send_message_and_delete_it_1","historyId":"a3badd359ae16522bab36b21a5e31f53","time":{"start":1730134751401,"stop":1730134751527,"duration":126},"status":"failed","statusMessage":"AssertionError: Expected 200, got 401. Response: {\"message\": \"401: Unauthorized\", \"code\": 0}","statusTrace":"base_url = 'https://discord.com/api/v10', headers = {'Authorization': None}\nchannel_id = '1281160246110457922'\n\n    @allure.feature('Отправка сообщений в Discord')\n    @allure.story('Отправка текстового сообщения с jpeg файлом, его проверка, удаление сообщения')\n    @pytest.mark.order(1)\n    def test_send_message_and_delete_it_1(base_url, headers, channel_id):\n        global message_1_id\n    \n        # Генерация случайного JPG изображения\n        image_path = generate_random_image('JPEG')\n    \n        with allure.step('Отправка сообщения Message_1 с изображением'):\n>           message_1_id = send_message_1(base_url, headers, channel_id, image_path)\n\ntest_DiscordAPI.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ncreate_message.py:141: in send_message_1\n    return create_message(base_url, headers, channel_id, message_data, file_path)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nbase_url = 'https://discord.com/api/v10', headers = {'Authorization': None}\nchannel_id = '1281160246110457922'\nmessage_data = {'content': '12345 вышел зайчик погулять'}\nfile_path = '/tmp/tmps1a_3y3w.jpeg'\n\n    def create_message(base_url, headers, channel_id, message_data, file_path=None):\n        url = f\"{base_url}/channels/{channel_id}/messages\"\n        print(f\"URL: {url}\")\n    \n        with allure.step(\"Отправка POST-запроса\"):\n    \n            form_data = {\n                'content': message_data['content'],\n            }\n    \n            print(f\"Form data: {form_data}\")\n    \n            files = {}  # Словарь для файлов\n    \n            if file_path:\n                with open(file_path, 'rb') as f:\n                    files['file'] = f\n                    print(f\"Sending file: {file_path}\")\n    \n                    # Отправляем запрос с файлом\n                    response = requests.post(url, headers=headers, data=form_data, files=files)\n            else:\n                # Отправка без файла\n                print(\"Sending without file\")\n                response = requests.post(url, headers=headers, data=form_data)\n    \n            print(f\"Response Status Code: {response.status_code}\")\n            print(f\"Response Text: {response.text}\")\n    \n            allure.attach(str(response.status_code), name=\"HTTP Status Code\", attachment_type=allure.attachment_type.TEXT)\n    \n        with allure.step(\"Проверка кода ответа\"):\n>           assert response.status_code == 200, f\"Expected 200, got {response.status_code}. Response: {response.text}\"\nE           AssertionError: Expected 200, got 401. Response: {\"message\": \"401: Unauthorized\", \"code\": 0}\n\ncreate_message.py:76: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"api_token","time":{"start":1730134751401,"stop":1730134751401,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"headers","time":{"start":1730134751401,"stop":1730134751401,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"channel_id","time":{"start":1730134751401,"stop":1730134751401,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1730134751401,"stop":1730134751401,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Expected 200, got 401. Response: {\"message\": \"401: Unauthorized\", \"code\": 0}","statusTrace":"base_url = 'https://discord.com/api/v10', headers = {'Authorization': None}\nchannel_id = '1281160246110457922'\n\n    @allure.feature('Отправка сообщений в Discord')\n    @allure.story('Отправка текстового сообщения с jpeg файлом, его проверка, удаление сообщения')\n    @pytest.mark.order(1)\n    def test_send_message_and_delete_it_1(base_url, headers, channel_id):\n        global message_1_id\n    \n        # Генерация случайного JPG изображения\n        image_path = generate_random_image('JPEG')\n    \n        with allure.step('Отправка сообщения Message_1 с изображением'):\n>           message_1_id = send_message_1(base_url, headers, channel_id, image_path)\n\ntest_DiscordAPI.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ncreate_message.py:141: in send_message_1\n    return create_message(base_url, headers, channel_id, message_data, file_path)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nbase_url = 'https://discord.com/api/v10', headers = {'Authorization': None}\nchannel_id = '1281160246110457922'\nmessage_data = {'content': '12345 вышел зайчик погулять'}\nfile_path = '/tmp/tmps1a_3y3w.jpeg'\n\n    def create_message(base_url, headers, channel_id, message_data, file_path=None):\n        url = f\"{base_url}/channels/{channel_id}/messages\"\n        print(f\"URL: {url}\")\n    \n        with allure.step(\"Отправка POST-запроса\"):\n    \n            form_data = {\n                'content': message_data['content'],\n            }\n    \n            print(f\"Form data: {form_data}\")\n    \n            files = {}  # Словарь для файлов\n    \n            if file_path:\n                with open(file_path, 'rb') as f:\n                    files['file'] = f\n                    print(f\"Sending file: {file_path}\")\n    \n                    # Отправляем запрос с файлом\n                    response = requests.post(url, headers=headers, data=form_data, files=files)\n            else:\n                # Отправка без файла\n                print(\"Sending without file\")\n                response = requests.post(url, headers=headers, data=form_data)\n    \n            print(f\"Response Status Code: {response.status_code}\")\n            print(f\"Response Text: {response.text}\")\n    \n            allure.attach(str(response.status_code), name=\"HTTP Status Code\", attachment_type=allure.attachment_type.TEXT)\n    \n        with allure.step(\"Проверка кода ответа\"):\n>           assert response.status_code == 200, f\"Expected 200, got {response.status_code}. Response: {response.text}\"\nE           AssertionError: Expected 200, got 401. Response: {\"message\": \"401: Unauthorized\", \"code\": 0}\n\ncreate_message.py:76: AssertionError","steps":[{"name":"Отправка сообщения Message_1 с изображением","time":{"start":1730134751402,"stop":1730134751527,"duration":125},"status":"failed","statusMessage":"AssertionError: Expected 200, got 401. Response: {\"message\": \"401: Unauthorized\", \"code\": 0}\n","statusTrace":"  File \"/home/runner/work/DiscordE2EAPITest/DiscordE2EAPITest/test_DiscordAPI.py\", line 42, in test_send_message_and_delete_it_1\n    message_1_id = send_message_1(base_url, headers, channel_id, image_path)\n  File \"/home/runner/work/DiscordE2EAPITest/DiscordE2EAPITest/create_message.py\", line 141, in send_message_1\n    return create_message(base_url, headers, channel_id, message_data, file_path)\n  File \"/home/runner/work/DiscordE2EAPITest/DiscordE2EAPITest/create_message.py\", line 76, in create_message\n    assert response.status_code == 200, f\"Expected 200, got {response.status_code}. Response: {response.text}\"\n","steps":[{"name":"Отправка POST-запроса","time":{"start":1730134751402,"stop":1730134751527,"duration":125},"status":"passed","steps":[],"attachments":[{"uid":"52949a826c731fdf","name":"HTTP Status Code","source":"52949a826c731fdf.txt","type":"text/plain","size":3}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Проверка кода ответа","time":{"start":1730134751527,"stop":1730134751527,"duration":0},"status":"failed","statusMessage":"AssertionError: Expected 200, got 401. Response: {\"message\": \"401: Unauthorized\", \"code\": 0}\n","statusTrace":"  File \"/home/runner/work/DiscordE2EAPITest/DiscordE2EAPITest/create_message.py\", line 76, in create_message\n    assert response.status_code == 200, f\"Expected 200, got {response.status_code}. Response: {response.text}\"\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":1,"hasContent":true}],"attachments":[{"uid":"d5ab0fdcd1181074","name":"stdout","source":"d5ab0fdcd1181074.txt","type":"text/plain","size":265}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true},"afterStages":[],"labels":[{"name":"story","value":"Отправка текстового сообщения с jpeg файлом, его проверка, удаление сообщения"},{"name":"feature","value":"Отправка сообщений в Discord"},{"name":"tag","value":"order(1)"},{"name":"suite","value":"test_DiscordAPI"},{"name":"host","value":"fv-az1106-113"},{"name":"thread","value":"2110-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_DiscordAPI"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"channel_id","value":"'1281160246110457922'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["order(1)"]},"source":"32a3a7e178d9d060.json","parameterValues":["'1281160246110457922'"]}