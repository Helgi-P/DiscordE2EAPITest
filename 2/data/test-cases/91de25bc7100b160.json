{"uid":"91de25bc7100b160","name":"test_large_message[1286673450064412684]","fullName":"test_DiscordAPI#test_large_message","historyId":"22ae31d5becb033a33383515a980fe04","time":{"start":1730134754087,"stop":1730134754199,"duration":112},"status":"failed","statusMessage":"AssertionError: Тест упал: сообщение длиной 2000 символов не отправлено.","statusTrace":"base_url = 'https://discord.com/api/v10', headers = {'Authorization': None}\nchannel_id = '1286673450064412684', file_path = None\n\n    def send_message_3_3(base_url, headers, channel_id, file_path=None):\n        message_data = {\"content\": Message_3_3}\n    \n        message_length = len(Message_3_3)\n    \n        with allure.step(f\"Проверка длины сообщения перед отправкой: {message_length} знаков\"):\n            allure.attach(f\"Длина сообщения: {message_length}\", name=\"Message Length\",\n                          attachment_type=allure.attachment_type.TEXT)\n    \n        try:\n>           response = create_message(base_url, headers, channel_id, message_data, file_path)\n\ncreate_message.py:174: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nbase_url = 'https://discord.com/api/v10', headers = {'Authorization': None}\nchannel_id = '1286673450064412684'\nmessage_data = {'content': 'Родные Мягколапа,  зайца из семьи Лесных, были в отчаянии, когда их пушистый друг не вернулся с прогулки ... смотрел, удерживая его под полным контролем. С последним шагом человек исчез под водой, поглощенный болотом AHAHAHAH'}\nfile_path = None\n\n    def create_message(base_url, headers, channel_id, message_data, file_path=None):\n        url = f\"{base_url}/channels/{channel_id}/messages\"\n        print(f\"URL: {url}\")\n    \n        with allure.step(\"Отправка POST-запроса\"):\n    \n            form_data = {\n                'content': message_data['content'],\n            }\n    \n            print(f\"Form data: {form_data}\")\n    \n            files = {}  # Словарь для файлов\n    \n            if file_path:\n                with open(file_path, 'rb') as f:\n                    files['file'] = f\n                    print(f\"Sending file: {file_path}\")\n    \n                    # Отправляем запрос с файлом\n                    response = requests.post(url, headers=headers, data=form_data, files=files)\n            else:\n                # Отправка без файла\n                print(\"Sending without file\")\n                response = requests.post(url, headers=headers, data=form_data)\n    \n            print(f\"Response Status Code: {response.status_code}\")\n            print(f\"Response Text: {response.text}\")\n    \n            allure.attach(str(response.status_code), name=\"HTTP Status Code\", attachment_type=allure.attachment_type.TEXT)\n    \n        with allure.step(\"Проверка кода ответа\"):\n>           assert response.status_code == 200, f\"Expected 200, got {response.status_code}. Response: {response.text}\"\nE           AssertionError: Expected 200, got 401. Response: {\"message\": \"401: Unauthorized\", \"code\": 0}\n\ncreate_message.py:76: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nbase_url = 'https://discord.com/api/v10', headers = {'Authorization': None}\nchannel_id = '1286673450064412684'\nemojis = {'emoji_name_1': '\uD83D\uDE31', 'emoji_name_2': '\uD83D\uDC79', 'emoji_name_3': '\uD83D\uDC80', 'emoji_name_zaika': '\uD83D\uDC07'}\nuser_id = '1286609819137998883'\n\n    @allure.story('Отправка большого сообщения')\n    @pytest.mark.order(4)\n    def test_large_message(base_url, headers, channel_id, emojis, user_id):\n        global message_3_3_id\n    \n        with allure.step('Отправка сообщения Message_3_3'):\n>           message_3_3_id = send_message_3_3(base_url, headers, channel_id)\n\ntest_DiscordAPI.py:164: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nbase_url = 'https://discord.com/api/v10', headers = {'Authorization': None}\nchannel_id = '1286673450064412684', file_path = None\n\n    def send_message_3_3(base_url, headers, channel_id, file_path=None):\n        message_data = {\"content\": Message_3_3}\n    \n        message_length = len(Message_3_3)\n    \n        with allure.step(f\"Проверка длины сообщения перед отправкой: {message_length} знаков\"):\n            allure.attach(f\"Длина сообщения: {message_length}\", name=\"Message Length\",\n                          attachment_type=allure.attachment_type.TEXT)\n    \n        try:\n            response = create_message(base_url, headers, channel_id, message_data, file_path)\n    \n            with allure.step(\"Сообщение успешно отправлено\"):\n                allure.attach(f\"Сообщение успешно отправлено длиной {message_length} знаков.\",\n                              name=\"Успех отправки\", attachment_type=allure.attachment_type.TEXT)\n    \n            return response\n    \n        except AssertionError as e:\n            with allure.step(\"Сообщение не удалось отправить\"):\n                allure.attach(f\"Ошибка: {str(e)}\", name=\"Ошибка отправки\", attachment_type=allure.attachment_type.TEXT)\n                allure.attach(f\"Текст сообщения: {Message_3_3}\", name=\"Текст сообщения\",\n                              attachment_type=allure.attachment_type.TEXT)\n    \n            with allure.step(\"Проблема с длиной сообщения\"):\n                max_length = 2000\n                allure.attach(\n                    f\"Ошибка при отправке сообщения длиной {message_length} символов. \"\n                    f\"Ограничение: {max_length} символов.\",\n                    name=\"Возможная проблема\", attachment_type=allure.attachment_type.TEXT)\n    \n            # Выбрасываем ошибку для завершения теста\n>           raise AssertionError(f\"Тест упал: сообщение длиной {message_length} символов не отправлено.\")\nE           AssertionError: Тест упал: сообщение длиной 2000 символов не отправлено.\n\ncreate_message.py:196: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1730134754086,"stop":1730134754086,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"headers","time":{"start":1730134754086,"stop":1730134754086,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"user_id","time":{"start":1730134754086,"stop":1730134754086,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"channel_id","time":{"start":1730134754086,"stop":1730134754086,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"api_token","time":{"start":1730134754086,"stop":1730134754086,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"emojis","time":{"start":1730134754086,"stop":1730134754086,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Тест упал: сообщение длиной 2000 символов не отправлено.","statusTrace":"base_url = 'https://discord.com/api/v10', headers = {'Authorization': None}\nchannel_id = '1286673450064412684', file_path = None\n\n    def send_message_3_3(base_url, headers, channel_id, file_path=None):\n        message_data = {\"content\": Message_3_3}\n    \n        message_length = len(Message_3_3)\n    \n        with allure.step(f\"Проверка длины сообщения перед отправкой: {message_length} знаков\"):\n            allure.attach(f\"Длина сообщения: {message_length}\", name=\"Message Length\",\n                          attachment_type=allure.attachment_type.TEXT)\n    \n        try:\n>           response = create_message(base_url, headers, channel_id, message_data, file_path)\n\ncreate_message.py:174: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nbase_url = 'https://discord.com/api/v10', headers = {'Authorization': None}\nchannel_id = '1286673450064412684'\nmessage_data = {'content': 'Родные Мягколапа,  зайца из семьи Лесных, были в отчаянии, когда их пушистый друг не вернулся с прогулки ... смотрел, удерживая его под полным контролем. С последним шагом человек исчез под водой, поглощенный болотом AHAHAHAH'}\nfile_path = None\n\n    def create_message(base_url, headers, channel_id, message_data, file_path=None):\n        url = f\"{base_url}/channels/{channel_id}/messages\"\n        print(f\"URL: {url}\")\n    \n        with allure.step(\"Отправка POST-запроса\"):\n    \n            form_data = {\n                'content': message_data['content'],\n            }\n    \n            print(f\"Form data: {form_data}\")\n    \n            files = {}  # Словарь для файлов\n    \n            if file_path:\n                with open(file_path, 'rb') as f:\n                    files['file'] = f\n                    print(f\"Sending file: {file_path}\")\n    \n                    # Отправляем запрос с файлом\n                    response = requests.post(url, headers=headers, data=form_data, files=files)\n            else:\n                # Отправка без файла\n                print(\"Sending without file\")\n                response = requests.post(url, headers=headers, data=form_data)\n    \n            print(f\"Response Status Code: {response.status_code}\")\n            print(f\"Response Text: {response.text}\")\n    \n            allure.attach(str(response.status_code), name=\"HTTP Status Code\", attachment_type=allure.attachment_type.TEXT)\n    \n        with allure.step(\"Проверка кода ответа\"):\n>           assert response.status_code == 200, f\"Expected 200, got {response.status_code}. Response: {response.text}\"\nE           AssertionError: Expected 200, got 401. Response: {\"message\": \"401: Unauthorized\", \"code\": 0}\n\ncreate_message.py:76: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nbase_url = 'https://discord.com/api/v10', headers = {'Authorization': None}\nchannel_id = '1286673450064412684'\nemojis = {'emoji_name_1': '\uD83D\uDE31', 'emoji_name_2': '\uD83D\uDC79', 'emoji_name_3': '\uD83D\uDC80', 'emoji_name_zaika': '\uD83D\uDC07'}\nuser_id = '1286609819137998883'\n\n    @allure.story('Отправка большого сообщения')\n    @pytest.mark.order(4)\n    def test_large_message(base_url, headers, channel_id, emojis, user_id):\n        global message_3_3_id\n    \n        with allure.step('Отправка сообщения Message_3_3'):\n>           message_3_3_id = send_message_3_3(base_url, headers, channel_id)\n\ntest_DiscordAPI.py:164: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nbase_url = 'https://discord.com/api/v10', headers = {'Authorization': None}\nchannel_id = '1286673450064412684', file_path = None\n\n    def send_message_3_3(base_url, headers, channel_id, file_path=None):\n        message_data = {\"content\": Message_3_3}\n    \n        message_length = len(Message_3_3)\n    \n        with allure.step(f\"Проверка длины сообщения перед отправкой: {message_length} знаков\"):\n            allure.attach(f\"Длина сообщения: {message_length}\", name=\"Message Length\",\n                          attachment_type=allure.attachment_type.TEXT)\n    \n        try:\n            response = create_message(base_url, headers, channel_id, message_data, file_path)\n    \n            with allure.step(\"Сообщение успешно отправлено\"):\n                allure.attach(f\"Сообщение успешно отправлено длиной {message_length} знаков.\",\n                              name=\"Успех отправки\", attachment_type=allure.attachment_type.TEXT)\n    \n            return response\n    \n        except AssertionError as e:\n            with allure.step(\"Сообщение не удалось отправить\"):\n                allure.attach(f\"Ошибка: {str(e)}\", name=\"Ошибка отправки\", attachment_type=allure.attachment_type.TEXT)\n                allure.attach(f\"Текст сообщения: {Message_3_3}\", name=\"Текст сообщения\",\n                              attachment_type=allure.attachment_type.TEXT)\n    \n            with allure.step(\"Проблема с длиной сообщения\"):\n                max_length = 2000\n                allure.attach(\n                    f\"Ошибка при отправке сообщения длиной {message_length} символов. \"\n                    f\"Ограничение: {max_length} символов.\",\n                    name=\"Возможная проблема\", attachment_type=allure.attachment_type.TEXT)\n    \n            # Выбрасываем ошибку для завершения теста\n>           raise AssertionError(f\"Тест упал: сообщение длиной {message_length} символов не отправлено.\")\nE           AssertionError: Тест упал: сообщение длиной 2000 символов не отправлено.\n\ncreate_message.py:196: AssertionError","steps":[{"name":"Отправка сообщения Message_3_3","time":{"start":1730134754087,"stop":1730134754199,"duration":112},"status":"failed","statusMessage":"AssertionError: Тест упал: сообщение длиной 2000 символов не отправлено.\n","statusTrace":"  File \"/home/runner/work/DiscordE2EAPITest/DiscordE2EAPITest/test_DiscordAPI.py\", line 164, in test_large_message\n    message_3_3_id = send_message_3_3(base_url, headers, channel_id)\n  File \"/home/runner/work/DiscordE2EAPITest/DiscordE2EAPITest/create_message.py\", line 196, in send_message_3_3\n    raise AssertionError(f\"Тест упал: сообщение длиной {message_length} символов не отправлено.\")\n","steps":[{"name":"Проверка длины сообщения перед отправкой: 2000 знаков","time":{"start":1730134754087,"stop":1730134754087,"duration":0},"status":"passed","steps":[],"attachments":[{"uid":"ccccfa13648377e8","name":"Message Length","source":"ccccfa13648377e8.txt","type":"text/plain","size":35}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Отправка POST-запроса","time":{"start":1730134754087,"stop":1730134754198,"duration":111},"status":"passed","steps":[],"attachments":[{"uid":"e8f05906dbd57352","name":"HTTP Status Code","source":"e8f05906dbd57352.txt","type":"text/plain","size":3}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Проверка кода ответа","time":{"start":1730134754198,"stop":1730134754198,"duration":0},"status":"failed","statusMessage":"AssertionError: Expected 200, got 401. Response: {\"message\": \"401: Unauthorized\", \"code\": 0}\n","statusTrace":"  File \"/home/runner/work/DiscordE2EAPITest/DiscordE2EAPITest/create_message.py\", line 76, in create_message\n    assert response.status_code == 200, f\"Expected 200, got {response.status_code}. Response: {response.text}\"\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Сообщение не удалось отправить","time":{"start":1730134754198,"stop":1730134754199,"duration":1},"status":"passed","steps":[],"attachments":[{"uid":"ef159f16f5f43444","name":"Ошибка отправки","source":"ef159f16f5f43444.txt","type":"text/plain","size":90},{"uid":"8733c23c7945d9d7","name":"Текст сообщения","source":"8733c23c7945d9d7.txt","type":"text/plain","size":3658}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true},{"name":"Проблема с длиной сообщения","time":{"start":1730134754199,"stop":1730134754199,"duration":0},"status":"passed","steps":[],"attachments":[{"uid":"bfac5b3bd33e047f","name":"Возможная проблема","source":"bfac5b3bd33e047f.txt","type":"text/plain","size":138}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":5,"hasContent":true}],"attachments":[{"uid":"4ebf0ea95b73b7cd","name":"stdout","source":"4ebf0ea95b73b7cd.txt","type":"text/plain","size":3831}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":6,"hasContent":true},"afterStages":[],"labels":[{"name":"story","value":"Отправка большого сообщения"},{"name":"tag","value":"order(4)"},{"name":"suite","value":"test_DiscordAPI"},{"name":"host","value":"fv-az1106-113"},{"name":"thread","value":"2110-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_DiscordAPI"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"channel_id","value":"'1286673450064412684'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["order(4)"]},"source":"91de25bc7100b160.json","parameterValues":["'1286673450064412684'"]}